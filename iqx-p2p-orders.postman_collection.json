{
  "info": {
    "name": "IQX P2P - Orders Module",
    "_postman_id": "iqx-p2p-orders-module",
    "description": "Postman collection for testing Orders (Buy, Sell, Open Orders) in IQX P2P Platform",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Create Buy Order",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"amount\": 2,\n  \"price\": 100\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/v1/orders/buy",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "v1",
            "orders",
            "buy"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Buy order created\", function () {",
              "    pm.response.to.have.status(200);",
              "    var res = pm.response.json();",
              "    pm.expect(res.success).to.eql(true);",
              "    pm.expect(res.order.type).to.eql(\"buy\");",
              "    pm.expect(res.order.status).to.eql(\"open\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Create Sell Order",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"amount\": 1,\n  \"price\": 120\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/v1/orders/sell",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "v1",
            "orders",
            "sell"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Sell order created\", function () {",
              "    pm.response.to.have.status(200);",
              "    var res = pm.response.json();",
              "    pm.expect(res.success).to.eql(true);",
              "    pm.expect(res.order.type).to.eql(\"sell\");",
              "    pm.expect(res.order.status).to.eql(\"open\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Open Orders",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/v1/orders/open",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "v1",
            "orders",
            "open"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Open orders fetched\", function () {",
              "    pm.response.to.have.status(200);",
              "    var res = pm.response.json();",
              "    pm.expect(res.success).to.eql(true);",
              "    pm.expect(res.orders).to.be.an(\"array\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Open Buy Orders Only",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl}}/api/v1/orders/open?type=buy",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "v1",
            "orders",
            "open"
          ],
          "query": [
            {
              "key": "type",
              "value": "buy"
            }
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Filtered buy orders fetched\", function () {",
              "    pm.response.to.have.status(200);",
              "    var res = pm.response.json();",
              "    pm.expect(res.success).to.eql(true);",
              "    pm.expect(res.orders).to.be.an(\"array\");",
              "    res.orders.forEach(order => {",
              "        pm.expect(order.type).to.eql(\"buy\");",
              "    });",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Buy Order Insufficient Funds",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{token}}",
            "type": "text"
          },
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"amount\": 9999,\n  \"price\": 1000\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/v1/orders/buy",
          "host": [
            "{{baseUrl}}"
          ],
          "path": [
            "api",
            "v1",
            "orders",
            "buy"
          ]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Buy order fails with insufficient funds\", function () {",
              "    pm.response.to.have.status(400);",
              "    var res = pm.response.json();",
              "    pm.expect(res).to.have.property(\"error\", \"insufficient_funds\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000"
    },
    {
      "key": "token",
      "value": ""
    }
  ]
}